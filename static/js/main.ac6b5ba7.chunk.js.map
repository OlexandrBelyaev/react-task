{"version":3,"sources":["components/WeatherChart/WeatherChart.jsx","components/WhetherCard/WhetherCard.jsx","components/CardList/CardList.jsx","App.js","index.js"],"names":["WeatherChart","props","options","chart","id","xaxis","categories","fill","colors","averageTemp","className","series","name","data","type","width","height","WhetherCard","whether","localization","language","background","deleteCard","useState","temperatureSystem","changeSystem","main","Object","assign","weather","sys","wind","description","icon","temp_max","temp_min","convertToFarengate","Kelvin","Math","round","toString","convertToCelsy","celsy","style","country","src","alt","onClick","result","date","Date","getDay","getDate","getMonth","getHours","getMinutes","getActualDate","temp","href","feelsLike","feels_like","speed","humidity","pressure","CardList","savedCards","chartBackground","map","card","index","defultProps","App","state","lang","key","searchNameCity","en","placeholder","searchBitton","ua","ru","loadData","JSON","parse","localStorage","getItem","fetch","then","response","json","setState","location","loadWhether","city","cod","setItem","stringify","changeLanguage","e","target","value","setBackgroundCard","setBackgroundChart","setSearchNameCity","addCard","editedList","filter","_","this","onChange","React","Component","ReactDOM","render","document","getElementById"],"mappings":"8UAwCeA,EArCM,SAACC,GACpB,IAAMC,EAAU,CACdC,MAAO,CACLC,GAAI,aAENC,MAAO,CACLC,WAAY,CAAC,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,UAE9EC,KAAM,CACJC,OAAQP,EAAMQ,YAAc,EAAI,MAAQ,SAW9C,OACI,qBAAKC,UAAU,MAAf,SACE,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,cAAf,SACE,cAAC,IAAD,CACER,QAASA,EACTS,OAbK,CACb,CACEC,KAAM,cACNC,KAAM,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,KAW1BC,KAAK,OACLC,MAAM,MACNC,OAAO,eC+JJC,EA1LK,SAAC,GAOd,IANLC,EAMI,EANJA,QACAC,EAKI,EALJA,aACAC,EAII,EAJJA,SACAC,EAGI,EAHJA,WACAC,EAEI,EAFJA,WACAlB,EACI,EADJA,GACI,EACsCmB,mBAAS,KAD/C,mBACGC,EADH,KACsBC,EADtB,KAEEC,EAAOC,OAAOC,OAAO,GAAIV,EAAQQ,MACjCG,EAAUF,OAAOC,OAAO,GAAIV,EAAQW,SACpCC,EAAMH,OAAOC,OAAO,GAAIV,EAAQY,KAChCC,EAAOJ,OAAOC,OAAO,GAAIV,EAAQa,MALnC,EAO0BJ,OAAOC,OAAO,GAAIC,EAAQ,IAAhDG,EAPJ,EAOIA,YAAaC,EAPjB,EAOiBA,KACfxB,GAAeiB,EAAKQ,SAAWR,EAAKS,UAAY,EAEhDC,EAAqB,SAACC,GAC1B,OAAOC,KAAKC,MAAe,EAATF,EAAa,EAAI,QAAQG,YAGvCC,EAAiB,SAACJ,GACtB,IAAMK,EAAQJ,KAAKC,MAAMF,EAAS,QAAQG,WAE1C,OAAQE,EAAQ,EAAT,WAAkBA,GAAUA,GAyCrC,OACE,sBAAKhC,UAAU,cAAciC,MAAO,CAAEtB,WAAYA,GAAlD,UACE,sBAAKX,UAAU,sBAAf,UACE,qBAAKA,UAAU,oBAAf,mBACMQ,EAAQN,KADd,aACuBkB,EAAIc,WAE3B,sBAAKlC,UAAU,2BAAf,UACE,qBACEA,UAAU,oBACVmC,IAAG,2CAAsCZ,EAAtC,WACHa,IAAI,gBAEN,qBAAKpC,UAAU,kCAAf,SACGsB,IAEH,wBACEtB,UAAU,0BACVqC,QAASzB,EAAWlB,GAFtB,qBAQJ,qBAAKM,UAAU,oBAAf,SA7DkB,WACpB,IACIsC,EADEC,EAAO,IAAIC,KAGjB,OAAQD,EAAKE,UACX,KAAK,EAAGH,EAAS,MAAO,MACxB,KAAK,EAAGA,EAAS,MAAO,MACxB,KAAK,EAAGA,EAAS,MAAO,MACxB,KAAK,EAAGA,EAAS,MAAO,MACxB,KAAK,EAAGA,EAAS,MAAO,MACxB,KAAK,EAAGA,EAAS,MAAO,MACxB,KAAK,EAAGA,EAAS,MAMnB,OAFAA,GAAM,YAASC,EAAKG,UAAd,KAEEH,EAAKI,YACX,KAAK,EAAGL,GAAU,UAAW,MAC7B,KAAK,EAAGA,GAAU,WAAY,MAC9B,KAAK,EAAGA,GAAU,QAAS,MAC3B,KAAK,EAAGA,GAAU,QAAS,MAC3B,KAAK,EAAGA,GAAU,MAAO,MACzB,KAAK,EAAGA,GAAU,OAAQ,MAC1B,KAAK,EAAGA,GAAU,OAAQ,MAC1B,KAAK,EAAGA,GAAU,SAAU,MAC5B,KAAK,EAAGA,GAAU,YAAa,MAC/B,KAAK,EAAGA,GAAU,UAAW,MAC7B,KAAK,GAAIA,GAAU,WAAY,MAC/B,KAAK,GAAIA,GAAU,WAMrB,OAFAA,GAAM,YAASC,EAAKK,WAAd,YAA4BL,EAAKM,cA6BlCC,KAEH,qBAAK9C,UAAU,qBAAf,SACE,cAAC,EAAD,CACED,YAAaA,MAGjB,sBAAKC,UAAU,wBAAf,UACE,sBAAKA,UAAU,6BAAf,UACE,sBAAKA,UAAU,0BAAf,UAE0B,MAAtBc,EAEI,sBAAMd,UAAU,oBAAhB,SAEI+B,EAAef,EAAK+B,QAKxB,sBAAM/C,UAAU,oBAAhB,SAEI0B,EAAmBV,EAAK+B,QAKlC,sBACEC,KAAK,KACLhD,UACwB,MAAtBc,EACI,+BACA,wBAENuB,QAAS,WACPtB,EAAa,MARjB,oBAlBF,MAgCE,sBACEiC,KAAK,KACLhD,UACwB,MAAtBc,EACI,+BACA,wBAENuB,QAAS,WACPtB,EAAa,MARjB,uBAcF,qBAAKf,UAAU,yBAAf,SAE0B,MAAtBc,EAAA,UACOL,EAAaC,GAAUuC,UAD9B,YAEIlB,EAAef,EAAKkC,YAFxB,oBAIOzC,EAAaC,GAAUuC,UAJ9B,YAKIvB,EAAmBV,EAAKkC,YAL5B,eAUN,8BACE,sBAAKlD,UAAU,0BAAf,UACE,0CACMS,EAAaC,GAAUW,KAD7B,MAEE,mBAAGrB,UAAU,+BAAb,mBAAgDqB,EAAK8B,MAArD,aAEF,0CACM1C,EAAaC,GAAU0C,SAD7B,KAEE,mBAAGpD,UAAU,+BAAb,oBAAiDgB,EAAKoC,eAExD,0CACM3C,EAAaC,GAAU2C,SAD7B,KAEE,mBAAGrD,UAAU,+BAAb,oBAAiDgB,EAAKqC,2BCxK9DC,EAAW,SAAC,GAOX,IANLC,EAMI,EANJA,WACA9C,EAKI,EALJA,aACAC,EAII,EAJJA,SACAC,EAGI,EAHJA,WACAC,EAEI,EAFJA,WACA4C,EACI,EADJA,gBAEA,OACE,qBAAKxD,UAAU,WAAf,SAEIuD,EAAWE,KAAI,SAACC,EAAMC,GAAP,OACb,cAAC,EAAD,CAEEnD,QAASkD,EACTjD,aAAcA,EACdC,SAAUA,EACVC,WAAYA,EACZC,WAAYA,EACZlB,GAAIiE,EACJH,gBAAiBA,GAPZG,SAyBjBL,EAASM,YAAc,CACrBL,WAAY,IAGCD,QC+JAO,E,4MAxMbC,MAAQ,CACNC,KAAM,KACNR,WAAY,GACZS,IAAK,mCACLrD,WAAY,UACZsD,eAAgB,GAChBxD,aAAc,CACZyD,GAAI,CACFC,YAAa,eACbC,aAAc,MACdnB,UAAW,aACX5B,KAAM,OACN+B,SAAU,WACVC,SAAU,YAEZgB,GAAI,CACFF,YAAa,mEACbC,aAAc,uCACdnB,UAAW,wFACX5B,KAAM,iCACN+B,SAAU,yDACVC,SAAU,4BAEZiB,GAAI,CACFH,YAAa,6DACbC,aAAc,mDACdnB,UAAW,wFACX5B,KAAM,iCACN+B,SAAU,yDACVC,SAAU,sD,EAShBkB,SAAW,WAC8C,OAAnDC,KAAKC,MAAMC,aAAaC,QAAQ,eAClCC,MAAM,oCACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAACvC,GACL,EAAK0C,SAAS,CAAEC,SAAU3C,OAE3BuC,MAAK,WACJ,EAAKK,YAAY,EAAKpB,MAAMmB,SAASE,SAGvC,EAAKH,SAAS,CACZzB,WAAYiB,KAAKC,MAAMC,aAAaC,QAAQ,kB,EAKlDO,YAAc,SAACC,GAEbP,MAAM,oDAAD,OAAqDO,EAArD,kBAAmE,EAAKrB,MAAME,MAChFa,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAACvC,GACW,MAAfA,EAAO8C,KACR,EAAKJ,UAAS,SAAAlB,GAAK,MAAK,CACtBtD,QAAS8B,EACTiB,WAAW,CAAEjB,GAAH,mBAAcwB,EAAMP,oBAGjCsB,MAAK,WACJH,aAAaW,QAAQ,aAAcb,KAAKc,UAAU,EAAKxB,MAAMP,gBAG1B,OAAjCmB,aAAaC,QAAQ,SACvB,EAAKK,SAAS,CACZjB,KAAMW,aAAaC,QAAQ,W,EAKnCY,eAAiB,SAACC,GAChB,EAAKR,SAAS,CAAEjB,KAAMyB,EAAEC,OAAOC,QAC/BhB,aAAaW,QAAQ,OAAQG,EAAEC,OAAOC,Q,EAGxCC,kBAAoB,SAAChF,GACnB,OAAO,WACL,EAAKqE,SAAS,CACZrE,iB,EAKNiF,mBAAqB,SAACpC,GACpB,OAAO,WACL,EAAKwB,SAAS,CACZxB,sB,EAKNqC,kBAAoB,SAACL,GACnB,EAAKR,SAAS,CACZf,eAAgBuB,EAAEC,OAAOC,S,EAI7BI,QAAU,WACR,EAAKZ,YAAY,EAAKpB,MAAMG,gBAC5B,EAAKe,SAAS,CACZf,eAAgB,M,EAIpBrD,WAAa,SAAClB,GACZ,OAAO,WACL,IAAMqG,EAAa,EAAKjC,MAAMP,WAAWyC,QAAO,SAACC,EAAGtC,GAClD,OAAOjE,IAAOiE,KAEhB,EAAKqB,SAAS,CACZzB,WAAYwC,IAEdrB,aAAaW,QAAQ,aAAcb,KAAKc,UAAUS,M,uDArFtD,WACEG,KAAK3B,a,oBAwFP,WACE,OACE,sBAAKvE,UAAU,MAAf,UACE,sBAAKA,UAAU,SAAf,UACE,gCACE,uBACEI,KAAK,OACLJ,UAAU,oBACVmE,YAAa+B,KAAKpC,MAAMrD,aAAayF,KAAKpC,MAAMC,MAAMI,YACtDgC,SAAUD,KAAKL,kBACfH,MAAOQ,KAAKpC,MAAMG,iBAEpB,wBACEjE,UAAU,uBACVI,KAAK,SACLiC,QAAS6D,KAAKJ,QAHhB,SAKGI,KAAKpC,MAAMrD,aAAayF,KAAKpC,MAAMC,MAAMK,kBAG9C,sBAAKpE,UAAU,uBAAf,UACE,sBAAKA,UAAU,kBAAf,qBAEE,wBACEA,UAAU,yBACVqC,QAAS6D,KAAKP,kBAAkB,aAElC,wBACE3F,UAAU,yBACVqC,QAAS6D,KAAKP,kBAAkB,aAElC,wBACE3F,UAAU,yBACVqC,QAAS6D,KAAKP,kBAAkB,aAElC,wBACE3F,UAAU,yBACVqC,QAAS6D,KAAKP,kBAAkB,aAElC,wBACE3F,UAAU,yBACVqC,QAAS6D,KAAKP,kBAAkB,aAElC,wBACE3F,UAAU,yBACVqC,QAAS6D,KAAKP,kBAAkB,gBAIpC,yBACE3F,UAAU,uBACVmG,SAAUD,KAAKX,eAFjB,UAIE,wBAAQG,MAAM,KAAd,gBAGA,wBAAQA,MAAM,KAAd,gBAGA,wBAAQA,MAAM,KAAd,yBAMN,cAAC,EAAD,CACEnC,WAAY2C,KAAKpC,MAAMP,WACvB9C,aAAcyF,KAAKpC,MAAMrD,aACzBC,SAAUwF,KAAKpC,MAAMC,KACrBpD,WAAYuF,KAAKpC,MAAMnD,WACvBC,WAAYsF,KAAKtF,oB,GAlMTwF,IAAMC,WCDxBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ac6b5ba7.chunk.js","sourcesContent":["import React from \"react\";\nimport Chart from \"react-apexcharts\";\n\nconst WeatherChart = (props) => {\n  const options = {\n    chart: {\n      id: \"basic-bar\"\n    },\n    xaxis: {\n      categories: ['00:00', '03:00', '06:00', '09:00', '12:00', '15:00', '18:00', '21:00']\n    },\n    fill: {\n      colors: props.averageTemp > 0 ? \"red\" : \"blue\",\n    }\n  };\n\n  const series = [\n    {\n      name: \"Temperature\",\n      data: [5, 7, 10, 11, 15, 8, 10, 9]\n    }\n  ];\n\nreturn (\n    <div className=\"app\">\n      <div className=\"row\">\n        <div className=\"mixed-chart\">\n          <Chart\n            options={options}\n            series={series}\n            type=\"area\"\n            width=\"300\"\n            height=\"150\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default WeatherChart;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './WhetherCard.css';\nimport WeatherChart from '../WeatherChart/WeatherChart';\n\nconst WhetherCard = ({\n  whether,\n  localization,\n  language,\n  background,\n  deleteCard,\n  id,\n}) => {\n  const [temperatureSystem, changeSystem] = useState('c');\n  const main = Object.assign({}, whether.main);\n  const weather = Object.assign({}, whether.weather);\n  const sys = Object.assign({}, whether.sys);\n  const wind = Object.assign({}, whether.wind);\n\n  const { description, icon } = Object.assign({}, weather[0]);\n  const averageTemp = (main.temp_max + main.temp_min) / 2;\n\n  const convertToFarengate = (Kelvin) => {\n    return Math.round(Kelvin * 9 / 5 - 459.67).toString();\n  };\n\n  const convertToCelsy = (Kelvin) => {\n    const celsy = Math.round(Kelvin - 273.15).toString();\n\n    return (celsy > 0) ? `+${celsy}` : celsy;\n  };\n\n  const getActualDate = () => {\n    const date = new Date();\n    let result;\n\n    switch (date.getDay()) {\n      case 0: result = 'Mon'; break;\n      case 1: result = 'Tue'; break;\n      case 2: result = 'Wed'; break;\n      case 3: result = 'Thi'; break;\n      case 4: result = 'Fri'; break;\n      case 5: result = 'Sat'; break;\n      case 6: result = 'Sun'; break;\n      default: break;\n    }\n\n    result += `, ${date.getDate()} `;\n\n    switch (date.getMonth()) {\n      case 0: result += 'January'; break;\n      case 1: result += 'February'; break;\n      case 2: result += 'March'; break;\n      case 3: result += 'April'; break;\n      case 4: result += 'May'; break;\n      case 5: result += 'June'; break;\n      case 6: result += 'Jule'; break;\n      case 7: result += 'August'; break;\n      case 8: result += 'September'; break;\n      case 9: result += 'October'; break;\n      case 10: result += 'November'; break;\n      case 11: result += 'December'; break;\n      default: break;\n    }\n\n    result += `, ${date.getHours()}:${date.getMinutes()}`;\n\n    return result;\n  };\n\n  return (\n    <div className=\"WhetherCard\" style={{ background: background }}>\n      <div className=\"WhetherCard__header\">\n        <div className=\"WhetherCard__city\">\n          {`${whether.name}, ${sys.country}`}\n        </div>\n        <div className=\"WhetherCard__iconWhether\">\n          <img\n            className=\"WhetherCard__icon\"\n            src={`http://openweathermap.org/img/wn/${icon}@2x.png`}\n            alt=\"weatherIcon\"\n          />\n          <div className=\"WhetherCard__whetherDescription\">\n            {description}\n          </div>\n          <button\n            className=\"WhetherCard__deleteCard\"\n            onClick={deleteCard(id)}\n          >\n              {`x`}\n            </button>\n        </div>\n      </div>\n      <div className=\"WhetherCard__date\">\n        {getActualDate()}\n      </div>\n      <div className=\"WhetherCard__chart\">\n        <WeatherChart\n          averageTemp={averageTemp}\n        />\n      </div>\n      <div className=\"WhetherCard__templine\">\n        <div className=\"WhetherCard__tempcontainer\">\n          <div className=\"WhetherCard__tempToggle\">\n            {\n              temperatureSystem === 'c'\n                ? (\n                  <span className=\"WhetherCard__temp\">\n                    {\n                      convertToCelsy(main.temp)\n                    }\n                  </span>\n                )\n                : (\n                  <span className=\"WhetherCard__temp\">\n                    {\n                      convertToFarengate(main.temp)\n                    }\n                  </span>\n                )\n            }\n            <span\n              href=\"#1\"\n              className={\n                temperatureSystem === 'c'\n                  ? 'WhetherCard__temptype-active'\n                  : 'WhetherCard__temptype'\n              }\n              onClick={() => {\n                changeSystem('c');\n              }}\n            >\n              ℃\n            </span>\n            {` | `}\n            <span\n              href=\"#1\"\n              className={\n                temperatureSystem === 'f'\n                  ? 'WhetherCard__temptype-active'\n                  : 'WhetherCard__temptype'\n              }\n              onClick={() => {\n                changeSystem('f');\n              }}\n            >\n              ℉\n            </span>\n          </div>\n          <div className=\"WhetherCard__feelslike\">\n            {\n              temperatureSystem === 'c'\n                ? `${localization[language].feelsLike} ${\n                  convertToCelsy(main.feels_like)\n                }℃`\n                : `${localization[language].feelsLike} ${\n                  convertToFarengate(main.feels_like)\n                }℉`\n            }\n          </div>\n        </div>\n        <div>\n          <div className=\"WhetherCard__additional\">\n            <div>\n              {`${localization[language].wind}: `}\n              <b className=\"WhetherCard__additional-blue\">{`${wind.speed} m/s`}</b>\n            </div>\n            <div>\n              {`${localization[language].humidity}:`}\n              <b className=\"WhetherCard__additional-blue\">{` ${main.humidity}`}</b>\n            </div>\n            <div>\n              {`${localization[language].pressure}:`}\n              <b className=\"WhetherCard__additional-blue\">{` ${main.pressure}`}</b>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nWhetherCard.propTypes = {\n  whether: PropTypes.object.isRequired,\n  localization: PropTypes.object.isRequired,\n  language: PropTypes.string.isRequired,\n  background: PropTypes.string.isRequired,\n  deleteCard: PropTypes.func.isRequired,\n  id: PropTypes.number.isRequired,\n};\n\nexport default WhetherCard;\n","import React from 'react';\nimport './CardList.css';\nimport PropTypes from 'prop-types';\nimport WhetherCard from '../WhetherCard/WhetherCard';\n\nconst CardList = ({\n  savedCards,\n  localization,\n  language,\n  background,\n  deleteCard,\n  chartBackground,\n}) => {\n  return (\n    <div className=\"CardList\">\n      {\n        savedCards.map((card, index) =>\n          <WhetherCard\n            key={index}\n            whether={card}\n            localization={localization}\n            language={language}\n            background={background}\n            deleteCard={deleteCard}\n            id={index}\n            chartBackground={chartBackground}\n          />\n        )\n      }\n    </div>\n  );\n};\n\nCardList.propTypes = {\n  savedCards: PropTypes.arrayOf(\n    PropTypes.object,\n  ),\n  localization: PropTypes.object.isRequired,\n  language: PropTypes.string.isRequired,\n  background: PropTypes.string.isRequired,\n  deleteCard: PropTypes.func.isRequired,\n};\n\nCardList.defultProps = {\n  savedCards: [],\n};\n\nexport default CardList;\n","import React from 'react';\nimport './App.css';\nimport './components/Header/Header.css';\nimport CardList from './components/CardList/CardList';\n\nclass App extends React.Component {\n  state = {\n    lang: 'en',\n    savedCards: [],\n    key: '1c5a9a29fe1346947d780b45fcf95006',\n    background: '#FFF1FE',\n    searchNameCity: '',\n    localization: {\n      en: {\n        placeholder: 'City name...',\n        searchBitton: 'Add',\n        feelsLike: 'Feels like',\n        wind: 'Wind',\n        humidity: 'Humidity',\n        pressure: 'Pressure',\n      },\n      ua: {\n        placeholder: 'Назва міста...',\n        searchBitton: 'Додати',\n        feelsLike: 'Відчувається як',\n        wind: 'Вітер',\n        humidity: 'Вологість',\n        pressure: 'Тиск',\n      },\n      ru: {\n        placeholder: 'Имя города...',\n        searchBitton: 'Добавить',\n        feelsLike: 'Чувствуется как',\n        wind: 'Ветер',\n        humidity: 'Влажность',\n        pressure: 'Давление',\n      },\n    },\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  loadData = () => {\n    if (JSON.parse(localStorage.getItem('savedCards')) === null) {\n      fetch('https://geolocation-db.com/json/')\n      .then(response => response.json())\n      .then((result) => {\n        this.setState({ location: result });\n      })\n      .then(() => {\n        this.loadWhether(this.state.location.city);\n      });\n    } else {\n      this.setState({\n        savedCards: JSON.parse(localStorage.getItem('savedCards')),\n      });\n    }\n  }\n\n  loadWhether = (city) => {\n    // eslint-disable-next-line max-len\n    fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${this.state.key}`)\n      .then(response => response.json())\n      .then((result) => {\n        (result.cod === 200) &&\n        this.setState(state => ({\n          whether: result,\n          savedCards: [result, ...state.savedCards],\n        }));\n      })\n      .then(() => {\n        localStorage.setItem('savedCards', JSON.stringify(this.state.savedCards));\n      });\n\n      if (localStorage.getItem('lang') !== null) {\n        this.setState({\n          lang: localStorage.getItem('lang'),\n        });\n      }\n  }\n\n  changeLanguage = (e) => {\n    this.setState({ lang: e.target.value });\n    localStorage.setItem('lang', e.target.value);\n  }\n\n  setBackgroundCard = (background) => {\n    return () => {\n      this.setState({\n        background,\n      });\n    }\n  }\n\n  setBackgroundChart = (chartBackground) => {\n    return () => {\n      this.setState({\n        chartBackground,\n      });\n    }\n  }\n\n  setSearchNameCity = (e) => {\n    this.setState({\n      searchNameCity: e.target.value,\n    });\n  }\n\n  addCard = () => {\n    this.loadWhether(this.state.searchNameCity);\n    this.setState({\n      searchNameCity: '',\n    });\n  }\n\n  deleteCard = (id) => {\n    return () => {\n      const editedList = this.state.savedCards.filter((_, index) => {\n        return id !== index;\n      });\n      this.setState({\n        savedCards: editedList\n      });\n      localStorage.setItem('savedCards', JSON.stringify(editedList));\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"Header\">\n          <div>\n            <input\n              type=\"text\"\n              className=\"Header__searchBar\"\n              placeholder={this.state.localization[this.state.lang].placeholder}\n              onChange={this.setSearchNameCity}\n              value={this.state.searchNameCity}\n            />\n            <button\n              className=\"Header__searchButton\"\n              type=\"button\"\n              onClick={this.addCard}\n            >\n              {this.state.localization[this.state.lang].searchBitton}\n            </button>\n          </div>\n          <div className=\"Header__modificators\">\n            <div className=\"Header__palette\">\n              Palette:\n              <button\n                className=\"Header__paletteButtons\"\n                onClick={this.setBackgroundCard('#FFF1FE')}\n              ></button>\n              <button\n                className=\"Header__paletteButtons\"\n                onClick={this.setBackgroundCard('#F1F2FF')}\n              ></button>\n              <button\n                className=\"Header__paletteButtons\"\n                onClick={this.setBackgroundCard('#459DE9')}\n              ></button>\n              <button\n                className=\"Header__paletteButtons\"\n                onClick={this.setBackgroundCard('#F2F2F2')}\n              ></button>\n              <button\n                className=\"Header__paletteButtons\"\n                onClick={this.setBackgroundCard('#C5C5C5')}\n              ></button>\n              <button\n                className=\"Header__paletteButtons\"\n                onClick={this.setBackgroundCard('#8D8D8D')}\n              ></button>\n            </div>\n\n            <select\n              className=\"Header__langSelector\"\n              onChange={this.changeLanguage}\n            >\n              <option value=\"en\">\n                EN\n              </option>\n              <option value=\"ua\">\n                UA\n              </option>\n              <option value=\"ru\">\n                RU\n              </option>\n            </select>\n          </div>\n        </div>\n        <CardList\n          savedCards={this.state.savedCards}\n          localization={this.state.localization}\n          language={this.state.lang}\n          background={this.state.background}\n          deleteCard={this.deleteCard}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}